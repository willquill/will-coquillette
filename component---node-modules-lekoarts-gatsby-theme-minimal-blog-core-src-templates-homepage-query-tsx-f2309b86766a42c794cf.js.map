{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","List","children","sx","mb","ul","margin","padding","li","listStyle","a","variant","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","isMDXComponent","Title","console","warn","text","Homepage","posts","blogPath","siteTitle","useSiteMetadata","visuallyHidden","p","fontSize","mt","showTags","HomepageComponent","allPost","data","nodes","query","BlogListItem","post","color","title","date","Listing","className"],"mappings":"2FAAA,yEA8BeA,IAjBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTC,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMC,SAAP,KACGJ,EAAKK,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,IAAMH,SAAP,CAAgBI,IAAKF,EAAIG,QACpBF,GAAF,KACD,kBAAC,IAAD,CAAOG,GAAIC,OAAMC,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,EAAjB,IAA6BI,EAAIG,OACjEH,EAAIQ,a,oKCDFC,EAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,uBACEC,GAAI,CACFC,GAAI,CAAC,EAAG,EAAG,GACXC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,GAC1BC,GAAI,CAAEC,UAAW,OAAQL,GAAI,GAC7BM,EAAG,CAAEC,QAAS,oBAGfT,I,wECTCU,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cALS,UAKT,iBAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,8DACA,yBACA,yJACA,mEACA,wBACE,oBAAIC,WAAW,MAAf,uEACA,oBAAIA,WAAW,MAAf,cACA,oBAAIA,WAAW,MAAf,UACA,oBAAIA,WAAW,MAAf,gBACE,oBAAIA,WAAW,MACb,oBAAIA,WAAW,MAAf,mDACA,oBAAIA,WAAW,MAAf,4GAGJ,oBAAIA,WAAW,MAAf,YACE,oBAAIA,WAAW,MACb,oBAAIA,WAAW,MAAf,qBAIN,yBACA,mDAAgC,iCAAGA,WAAW,KAAQ,CAClD,KAAQ,WADoB,SAAhC,WAOJJ,EAAWK,gBAAiB,ECtCrB,IAEenB,EAKhBoB,GALgBpB,EAKM,QALE,SAA6BgB,GAEzD,OADAK,QAAQC,KAAK,aAAetB,EAAO,2EAC5B,oBAASgB,KAIZJ,EAAc,CAClBC,aAT0B,IAYb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cALS,UAKT,iBAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,cAACG,EAAD,CAAOG,KAAK,WAAWN,QAAQ,UAC/B,wBACE,oBAAIC,WAAW,MAAK,iCAAGA,WAAW,MAAS,CACvC,KAAQ,yBADQ,iBAGpB,oBAAIA,WAAW,MAAK,iCAAGA,WAAW,MAAS,CACvC,KAAQ,iCADQ,gBAApB,QAEkC,iCAAGA,WAAW,MAAS,CACrD,KAAQ,8CADsB,+BAQxCJ,EAAWK,gBAAiB,ECP5B,IAqBeK,EArBE,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAwB,EACXtC,cAAvBE,EADkC,EAClCA,SAAUqC,EADwB,EACxBA,SACVC,EAAcC,cAAdD,UAER,OACE,YAAC,IAAD,KACE,kBAAIxB,GAAI0B,KAAiBF,GACzB,uBAASxB,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,GAAI0B,EAAG,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,GAAI,KAC1D,YAAC,EAAD,OAEF,YAAC,IAAD,CAAOT,KAAK,gBACV,YAAC,OAAD,CAAMzB,GAAIC,YAAe,IAAIV,EAAL,IAAiBqC,IAAzC,mBAEF,YAAC,IAAD,CAASD,MAAOA,EAAOQ,UAAU,IACjC,YAAC,EAAD,KACE,YAAC,EAAD,SC5COC,UCQA,YAAsD,IAAhBlB,EAAgB,oBAEzDmB,EACNnB,EADFoB,KAAQD,QAGV,OAAO,kBAAC,EAAD,eAAUV,MAAOU,EAAQE,OAAWrB,KDb9BkB,IAEFI,EAAQ,c,6GEmCNC,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASP,gBAAT,gBACnB,YAAC,IAAD,CAAK7B,GAAI,GACP,YAAC,IAAD,CAAOR,GAAIC,OAAMC,GAAI0C,EAAK7C,KAAMQ,GAAI,CAAE4B,SAAU,CAAC,EAAG,EAAG,GAAIU,MAAO,SAC/DD,EAAKE,OAER,iBAAGvC,GAAI,CAAEsC,MAAO,YAAaT,GAAI,EAAGtB,EAAG,CAAE+B,MAAO,aAAeV,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOS,EAAKG,MACXH,EAAKtD,MAAQ+C,GACZ,YAAC,IAAM3C,SAAP,WAEE,YAAC,IAAD,CAAUJ,KAAMsD,EAAKtD,WCJhB0D,IARC,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAH,IAAUoB,iBAAV,eAA0BZ,gBAA1B,gBACd,uBAAS9B,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,IAAMyC,UAAWA,GACxCpB,EAAMlC,KAAI,SAACiD,GAAD,OACT,YAAC,EAAD,CAAc9C,IAAK8C,EAAK7C,KAAM6C,KAAMA,EAAMP,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-f2309b86766a42c794cf.js","sourcesContent":["import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3>{`Hey, my name is Will. I do DevOps.`}</h3>\n    <hr></hr>\n    <p>{`For the past 1-2 years, I've been using Python and Javascript to facilitate event management for a Security Operations Center.`}</p>\n    <p>{`I've been using these tools extensively:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`ServiceNow (including quite a bit of scripting within the platform)`}</li>\n      <li parentName=\"ul\">{`Streamsets`}</li>\n      <li parentName=\"ul\">{`VSCode`}</li>\n      <li parentName=\"ul\">{`Elasticsearch`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Lots of API usage to manage and manipulate data`}</li>\n          <li parentName=\"ul\">{`I've done a lot with ingestion, queries, mapping, templates, reindexing, analysis, searching, and more`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Terraform`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`AWS deployment`}</li>\n        </ul>\n      </li>\n    </ul>\n    <hr></hr>\n    <p>{`For more info, go to the `}<a parentName=\"p\" {...{\n        \"href\": \"/about\"\n      }}>{`About`}</a>{` page.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://homelab.city\"\n        }}>{`Homelab.city`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://icespire.rakara.net/\"\n        }}>{`D&D campaign`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/willquill/dnd-icespire\"\n        }}>{`D&D campaign source code`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}